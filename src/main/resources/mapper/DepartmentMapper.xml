<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.temkinda.cvision.mapper.DepartmentMapper">
    <resultMap id="department" type="Department" autoMapping="true">
    <result property="id" column="id"/>
    <result property="depName" column="dep_name"/>
    <result property="creationDate" column="creation_date"/>
    <result property="idParentDepartment" column="id_parent_department"/>
    </resultMap>
    <!--
        <resultMap id="detailedDepartmentInfo" type="Department">
            <result property="depName" column="department_name"/>
            <result property="creationDate" column="department_creation_date"/>
            <association property="employee" resultMap="employeeResult"/>
        </resultMap>
        <resultMap id="employeeResult" type="Employee" autoMapping="true">
            <result property="surname" column="employee_surname"/>
        </resultMap>
        -->

    <select id="selectDepartmentById" parameterType="java.lang.Long" resultMap = "department">
        select * from departments
        where id = #{id} order by id
    </select>

    <select id="selectChildDepartments" parameterType="java.lang.Long" resultMap="department">
        select * from departments
        where id_parent_department = #{id}
    </select>
    <update id="transfereDepartment" parameterType="Department">
        update departments
        set id_parent_department = #{id}
        where dep_name = #{depName}
    </update>
    <select id="searchDepartment" parameterType="java.lang.String" resultMap="department">
        select * from departments
        where dep_name like  '%' || #{depName} || '%'
    </select>
    <insert id="insertDepartment" parameterType="Department">
        insert into departments (dep_name, creation_date, id_parent_department)
        <if test="#{depName} != dep_name">
            values (#{depName}, #{creationDate}, #{idParentDepartment})
        </if>
    </insert>
    <update id="changeNameDepartment" parameterType="Department">
        update departments set dep_name = #{depNameNew}
        where dep_name = #{depName}
    </update>
    <delete id="deleteDepartment" parameterType="Department">
        delete from departments where dep_name = #{depName}
    </delete>

    <!--
    <select id="showDepartmentInfo" parameterType="java.lang.String" resultMap="detailedDepartmentInfo">
        select t1.dep_name as department_name, t1.creation_date as department_creation_date, t2.surname as employee_surname,
            t1.number_of_employees as department_number_of_employees
        from (select d.dep_name, d.creation_date, d.id,  count(*) as number_of_employees
              from departments d
                  join employees e on d.id = e.id_department
              where d.dep_name = #{depName}
              group by d.id) t1
            join (select surname, id_department from employees
            where id_department = (select id from departments where dep_name = #{depName})
                  and is_manager = 'yes') t2 on t1.id = t2.id_department
    </select>-->
</mapper>