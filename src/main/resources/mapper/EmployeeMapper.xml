<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.temkinda.cvision.mapper.EmployeeMapper">
    <resultMap id="employee" type="Employee" autoMapping="true">
        <result property="id" column="id"/>
        <result property="surname" column="surname"/>
        <result property="name" column="name"/>
        <result property="patronymic" column="patronymic"/>
        <result property="idGender" column="id_gender"/>
        <result property="birthday" column="birthday"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="email"/>
        <result property="employmentDate" column="employment_date"/>
        <result property="dismissalDate" column="dismissal_date"/>
        <result property="idPosition" column="id_position"/>
        <result property="payment" column="payment"/>
        <result property="isManager" column="is_manager"/>
        <result property="idDepartment" column="id_department"/>
    </resultMap>

    <select id="getEmployeeInfo" parameterType="java.lang.Long" resultMap="employee">
        select * from employees
        where id = #{id}
    </select>
    <select id="selectBossOfDepartment" parameterType="java.lang.Long" resultMap="employee">
        select * from employees
        where id_department = #{id} and is_manager and dismissal_date is null
    </select>
    <select id="countEmployeesFromDepartment" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(id)
        from employees
        where id_department = #{id}
        group by id_department
    </select>
    <select id="getSalaryFundOfDepartment" parameterType="java.lang.Long" resultType="int">
        select sum(payment)
        from employees
        where id_department = #{id}
        group by id_department
    </select>
    <select id="getEmployeesOfDepartment" parameterType="java.lang.Long" resultMap="employee">
        select *
        from employees
        where id_department = #{id}
    </select>
    <insert id="insertEmployee" parameterType="Employee">
        insert into employees (surname, name, patronymic, id_gender, birthday, phone_number, email, employment_date, id_position, payment, is_manager, id_department)
        values (#{surname}, #{name}, #{patronymic}, #{idGender}, #{birthday}, #{phoneNumber}, #{email}, #{employmentDate}, #{idPosition}, #{payment}, #{isManager}, #{idDepartment});
    </insert>
    <update id="updateEmployee" parameterType="Employee">
        update employees
        set surname = #{surname}, name = #{name}, patronymic = #{patronymic}, id_gender = #{idGender},
            birthday = #{birthday}, phone_number = #{phoneNumber}, email = #{email}, employment_date = #{employmentDate},
            id_position = #{idPosition}, payment = #{payment}, is_manager = #{isManager}, id_department = #{idDepartment}
    </update>
    <update id="dismissEmployee" parameterType="Employee">
        update employees
        set dismissal_date = #{dismissalDate}, id_department = null
        where id = #{id}
    </update>
    <update id="transfereEmployeeToAnotherDepartment" parameterType="Employee">
        update employees
        set id_department = #{idDepartment}
        where id = #{id}
    </update>
    <update id="transfereAllEmployeesOfDepartmentToAnotherDepartment" parameterType="Employee">
        update employees
        set id_department = #{idDepartmentTo}
        where id_department = #{idFrom}
    </update>
    <select id="showBossOfEmployee" parameterType="java.lang.Long" resultMap="employee">
        select * from employees e1
        join (select id_department
            from employees
            where id = #{id}) e2
        on e1.id = e2.id_department
        where is_manager
    </select>
</mapper>